trainer:
  gpus: 1 # number of GPUs (0 for CPU), or list of the GPUs to use e.g. [0, 1]
  num_nodes: 1
  max_epochs: 20
  max_steps: null # precedence over max_epochs
  accumulate_grad_batches: 1 # accumulates grads every k batches
  gradient_clip_val: 1.0
  amp_level: O1 # O1/O2 for mixed precision
  precision: 16 # Should be set to 16 for O1 and O2 to enable the AMP.
  accelerator: ddp
  log_every_n_steps: 500  # Interval of logging.
  val_check_interval: 1.0  # Set to 0.25 to check 4 times per epoch, or an int for number of iterations
  resume_from_checkpoint: null # The path to a checkpoint file to continue the training, restores the whole state including the epoch, step, LR schedulers, apex, etc.
  num_sanity_val_steps: 0 # number of steps to perform validation steps for sanity check the validation process before starting the training, setting to 0 disables it
  checkpoint_callback: False  # Provided by exp_manager
  logger: False  # Provided by exp_manager

exp_manager:
  explicit_log_dir: /red/gatortron-phi/workspace/2021gatortron/nemo_downstream/re/results/n2c2_9b
  exp_dir: null  # exp_dir for your experiment, if None, defaults to "./nemo_experiments"
  name: null  # The name of your model
  create_tensorboard_logger: false  # Whether you want exp_manger to create a tb logger
  create_checkpoint_callback: True  # Whether you want exp_manager to create a modelcheckpoint callback

model:
  nemo_path: ${exp_manager.explicit_log_dir}/default.nemo # filename to save the model and associated artifacts to .nemo file
  tokenizer:
      tokenizer_name: ${model.language_model.pretrained_model_name} # or sentencepiece
      vocab_file: /red/gatortron-phi/workspace/data/new_pretrain_data/Gatortron_pretraining_data/new_vocabs/uf_full_pubmed_wiki_cased_50k/vocab.txt # path to vocab file
      tokenizer_model: null # only used if tokenizer is sentencepiece
      special_tokens: null

  language_model:
    pretrained_model_name: megatron-bert-cased
    lm_checkpoint: /red/gatortron-phi/workspace/models/new_pretraining_checkpoint/9b_uf_pubmed_wiki_uf_pubmed_wiki_50k_cased/iter_0670000
    config_file: /red/gatortron-phi/workspace/models/new_pretraining_checkpoint/9b_uf_pubmed_wiki_uf_pubmed_wiki_50k_cased/config.json # json file, precedence over config
    config: null # if specified initializes model from scratch

  classifier_head:
    num_output_layers: 2
    fc_dropout: 0.1

  class_labels:
    class_labels_file : null # optional to specify a file containing the list of the labels

  dataset:
    data_dir: /red/gatortron-phi/workspace/2021gatortron/data/re/2018n2c2/2018n2c2_marker_format_1
    num_classes: 2 # The number of classes. 0 < Label <num_classes.
    do_lower_case: false # true for uncased models, false for cased models, will be set automatically if pre-trained tokenizer model is used
    max_seq_length: 512 # the maximum length BERT supports is 512
    class_balancing: null # null or 'weighted_loss'. 'weighted_loss' enables the weighted class balancing of the loss, may be used for handling unbalanced classes
    use_cache: false # uses a cache to store the processed dataset, you may use it for large datasets for speed up
    num_workers:  8
    pin_memory: false
    drop_last: false

  train_ds:
    file: ${model.dataset.data_dir}/train.tsv # .json file
    file_path: ${model.dataset.data_dir}/train.tsv # .json file
    batch_size: 8 # per GPU
    shuffle: true
    num_samples: -1
    use_cache: ${model.dataset.use_cache}
    # Default values for the following params are retrieved from dataset config section, but you may override them
    num_workers: ${model.dataset.num_workers}
    drop_last: ${model.dataset.drop_last}
    pin_memory: ${model.dataset.pin_memory}

  validation_ds:
    file: ${model.dataset.data_dir}/test.tsv # .json file
    file_path: ${model.dataset.data_dir}/test.tsv
    batch_size: 4 # per GPU
    shuffle: true
    num_samples: -1  
    use_cache: ${model.dataset.use_cache}  
    # Default values for the following params are retrieved from dataset config section, but you may override them
    num_workers: ${model.dataset.num_workers}
    drop_last: ${model.dataset.drop_last}
    pin_memory: ${model.dataset.pin_memory}

  test_ds:
    file: ${model.dataset.data_dir}/test.tsv # .json file
    file_path: ${model.dataset.data_dir}/test.tsv # .json file
    batch_size: 16 # per GPU
    shuffle: false
    num_samples: -1
    use_cache: ${model.dataset.use_cache}
    # Default values for the following params are retrieved from dataset config section, but you may override them
    num_workers: ${model.dataset.num_workers}
    drop_last: ${model.dataset.drop_last}
    pin_memory: ${model.dataset.pin_memory}

  optim:
    name: adamw
    lr: 2e-5
    # optimizer arguments
    betas: [0.9, 0.999]
    weight_decay: 0.01

    # scheduler setup
    sched:
      name: WarmupAnnealing
      # Scheduler params
      warmup_steps: null
      warmup_ratio: 0.05
      last_epoch: -1
      # pytorch lightning args
      monitor: val_loss
      reduce_on_plateau: false